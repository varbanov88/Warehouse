@model Warehouse.Models.Silos.SiloViewModel

@{
    ViewBag.Title = "Export Commodity";
}

@using (Html.BeginForm("ExportCommodity", "Silos", FormMethod.Post))
{
    <form class="form-horizontal">
        <fieldset>
            <legend>Export Commodity</legend>
            <ul class="list-group">
                <li class="list-group-item">
                    <h2>@Model.Number. @Model.Name</h2>
                </li>
                <li class="list-group-item">
                    <h4>Current commodity: @Model.CurrentCommodity</h4>
                </li>
                <li class="list-group-item">
                    <h4>Maximum Capacity: @Model.MaxCapacity tones</h4>
                </li>
                <li class="list-group-item">
                    <h4>Available capacity: @Model.CapacityLeft tones</h4>
                </li>
                <li class="list-group-item">
                    <h4>You can export up to: @Model.CurrentLoad tones</h4>
                </li>
            </ul>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="container">
                <div class="form-group">
                    @Html.LabelFor(m => m.Commodity.Name, new { @class = "col-md-2 control-label" })
                    @Html.TextBoxFor(m => m.Commodity.Name, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Commodity.Amount, new { @class = "col-md-2 control-label" })
                    @Html.TextBoxFor(m => m.Commodity.Amount, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Commodity.Amount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="container">
                <a href="/Silos/All" class="btn btn-danger">Cancel</a>
                <input type="submit" value="Export" class="btn btn-warning" />
            </div>

        </fieldset>
    </form>
}